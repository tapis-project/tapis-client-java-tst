package edu.utexas.tacc.tapis.tokens.client.model;

import java.time.Instant;

public abstract class TapisBaseToken 
{
    // Fields.
    private Instant  expiresAt;   // UTC expiration time
    private Integer  expiresIn;   // approximate seconds to expiration
    
    // Accessors.
    public Instant getExpiresAt() {return expiresAt;}
    public void setExpiresAt(Instant utc) {this.expiresAt = utc;}
    public void setExpiresAt(String utc) {
        // Some protection.
        if (utc == null) {expiresAt = null; return;}
        
        // The token generator returns a string like 2020-02-09 00:59:07.697305+00:00,
        // which is RFC 8601 compliant for UTC.  Zulu time where the timezone offset
        // is replaced by Z is an alternate UTC format that is acceptable.  In either
        // case we always expect an RFC compliant format for UTC to be generated by
        // the Token service.
        // 
        try {this.expiresAt = Instant.parse(utc);}
            catch (Exception e) {
                // Naughty, naughty Token service!  Validation will fail.
                System.err.println("BAD_UTC_TIME_FORMAT received from Tokens service: " + 
                                   utc + " [" + e.getMessage() + "]");
            }
    }

    public Integer getExpiresIn() {return expiresIn; }
    public void setExpiresIn(Integer expiresIn) {this.expiresIn = expiresIn;}

    // Make sure both fields are filled in.
    public boolean isValid() {
        if (expiresAt == null || expiresIn == null) return false;
        return true;
    }
}
