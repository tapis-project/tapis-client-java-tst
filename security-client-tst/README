Generating the tapis-securityclt SDK
====================================

This project uses the swagger-codegen-maven-plugin to generate Java source code from 
the openapi specification found in src/main/resources/SKAuthorizationAPI.yaml.  This
yaml file is generated by hitting the openapi.yaml endpoint on a running securityapi
web application.  For example, if the securityapi web application is running locally,
issuing http://localhost:8080/security/v3/openapi.yaml from a browser will download
the openapi specification.

The configuration of the swagger-codegen-maven-plugin specifies where the inputs and
outputs of code generation will be.  The input is the above referenced generated yaml 
file that is manually updated in this project.  The generated source code is placed
under the ${project.build.directory}/generated-sources/swagger directory.  Specifically,
the source code is written to this subdirectory: 

  ${project.build.directory}/generated-sources/swagger/src/main/java
  
The classes compiled from the generated source code are put in the same subtree as
manually written code, but in the gen subdirectory:
  
  target/classes/edu.utexas.tacc.tapis.security.client.gen
  
When a maven build is invoked from the command line, as in "mvn clean install -Dgroups=unit",
the plugin generates the source code and gets it compiled.  In general, there's sparse
documentation for swagger/openapi code generation.  Plugin information can be found here:

  https://github.com/swagger-api/swagger-codegen/tree/master/modules/swagger-codegen-maven-plugin
  
The JAR file that gets built contains class file compiled from both manually written and
swagger generated source code.
  
Eclipse Users
-------------

The first time you download the project there will be no generated source code.  Any manually
written code and tests that depend on that source code will not compile.  Fix this requires
two things:

  1. Generate the source code.
     - Perform a maven build from the command line (mvn clean install -Dgroups=unit).
     - Refresh your workspace.
  2. Tell Eclipse where to look for the generated source code.
     - Add the following stanza to your .classpath file:
       
     <classpathentry kind="src" output="target/classes" path="target/generated-sources/swagger/src/main/java">
        <attributes>
            <attribute name="optional" value="true"/>
            <attribute name="maven.pomderived" value="true"/>
        </attributes>
     </classpathentry>
       
